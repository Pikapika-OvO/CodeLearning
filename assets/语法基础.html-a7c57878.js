const e=JSON.parse('{"key":"v-0bdf07f6","path":"/language/java/basis/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80.html","title":"语法详解","lang":"zh-CN","frontmatter":{"title":"语法详解","category":"Java","tag":["Java基础"],"date":"2020-04-01T00:00:00.000Z","original":"isOriginal","description":"基础语法 注释 通俗来讲注释就是，在你写代码的过程中，添加一些解释你写的某条语句或者某个语句块什么意思的补充说明，注释是不会被执行的。 Java 中的注释分类 单行注释 // 输出 Hello World System.out.println(\\"Hello World !\\");","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/CodeLearning/language/java/basis/%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"CodeLearning"}],["meta",{"property":"og:title","content":"语法详解"}],["meta",{"property":"og:description","content":"基础语法 注释 通俗来讲注释就是，在你写代码的过程中，添加一些解释你写的某条语句或者某个语句块什么意思的补充说明，注释是不会被执行的。 Java 中的注释分类 单行注释 // 输出 Hello World System.out.println(\\"Hello World !\\");"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-05-17T05:13:14.000Z"}],["meta",{"property":"article:author","content":"Mr.Walter"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2020-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-05-17T05:13:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"语法详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2022-05-17T05:13:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Walter\\",\\"url\\":\\"https://walterxiong.github.io/CodeLearning/\\"}]}"]]},"headers":[{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[{"level":3,"title":"Java 中的注释分类","slug":"java-中的注释分类","link":"#java-中的注释分类","children":[]}]},{"level":2,"title":"标识（zhi）符","slug":"标识-zhi-符","link":"#标识-zhi-符","children":[{"level":3,"title":"标识符命名规则","slug":"标识符命名规则","link":"#标识符命名规则","children":[]}]},{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"Java数据类型分类","slug":"java数据类型分类","link":"#java数据类型分类","children":[]}]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"隐式转换","slug":"隐式转换","link":"#隐式转换","children":[]},{"level":3,"title":"强制类型转换","slug":"强制类型转换","link":"#强制类型转换","children":[]}]},{"level":2,"title":"常量","slug":"常量","link":"#常量","children":[{"level":3,"title":"常量分类","slug":"常量分类","link":"#常量分类","children":[]}]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"变量的作用域","slug":"变量的作用域","link":"#变量的作用域","children":[]},{"level":3,"title":"变量的命名规范","slug":"变量的命名规范","link":"#变量的命名规范","children":[]}]},{"level":2,"title":"运算符","slug":"运算符","link":"#运算符","children":[{"level":3,"title":"1. 算数运算符","slug":"_1-算数运算符","link":"#_1-算数运算符","children":[]},{"level":3,"title":"2. 关系运算符","slug":"_2-关系运算符","link":"#_2-关系运算符","children":[]},{"level":3,"title":"3. 逻辑运算符","slug":"_3-逻辑运算符","link":"#_3-逻辑运算符","children":[]},{"level":3,"title":"4. 赋值运算符","slug":"_4-赋值运算符","link":"#_4-赋值运算符","children":[]},{"level":3,"title":"5. 位运算符","slug":"_5-位运算符","link":"#_5-位运算符","children":[]},{"level":3,"title":"6. 三目运算符","slug":"_6-三目运算符","link":"#_6-三目运算符","children":[]},{"level":3,"title":"运算符优先级","slug":"运算符优先级","link":"#运算符优先级","children":[]}]}],"git":{"createdTime":1652754533000,"updatedTime":1652764394000,"contributors":[{"name":"walterXiong","email":"522500824@qq.com","commits":2},{"name":"Jun Xiong","email":"33171329+WalterXiong@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":15.34,"words":4602},"filePathRelative":"language/java/basis/语法基础.md","localizedDate":"2020年4月1日","excerpt":"<h1> 基础语法</h1>\\n<h2> 注释</h2>\\n<p>通俗来讲注释就是，在你写代码的过程中，添加一些解释你写的某条语句或者某个语句块什么意思的补充说明，注释是不会被执行的。</p>\\n<h3> Java 中的注释分类</h3>\\n<ol>\\n<li>单行注释</li>\\n</ol>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token comment\\">// 输出 Hello World</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello World !\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
