import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,a as s,b as n,d as c,F as l,f as a,r as i}from"./app.48f4314c.js";const u={},k=a(`<h1 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap" aria-hidden="true">#</a> HashMap</h1><p>\u4E00\u76F4\u6CA1\u65F6\u95F4\u9759\u4E0B\u5FC3\u6765\u597D\u597D\u770B\u770B HashMap \u7684\u6E90\u7801\uFF0C\u62E9\u65E5\u4E0D\u5982\u649E\u65E5\uFF0C\u4ECA\u513F\u6765\u6D45\u70AB\u4E00\u53E3\uFF0C\u54C8\u54C8\u54C8~</p><p><img src="https://cdn.jsdelivr.net/gh/WalterXiong/typora-img/img/202209141419261.png" alt="img" loading="lazy"></p><h2 id="\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7279\u70B9" aria-hidden="true">#</a> \u7279\u70B9</h2><ul><li><p>\u5B9E\u73B0\u4E86 Map \u63A5\u53E3\uFF0C\u5373\u5141\u8BB8\u653E\u5165 key \u4E3A null \u5F97\u5143\u7D20\uFF0C\u4E5F\u5141\u8BB8\u653E\u5165 value \u4E3A null \u5F97\u5143\u7D20\uFF1B</p></li><li><p>\u4E0D\u4FDD\u8BC1\u653E\u5165\u5143\u7D20\u5F97\u987A\u5E8F\uFF1B</p></li><li><p>hash \u51B2\u7A81\u5904\u7406\u65B9\u5F0F\u4E3A\uFF1A\u51B2\u7A81\u94FE\u8868\u65B9\u5F0F\u3002</p></li></ul><h2 id="\u5E95\u5C42\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5E95\u5C42\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u5E95\u5C42\u6570\u636E\u7ED3\u6784</h2><p>\u6570\u7EC4 + \u94FE\u8868 + \u7EA2\u9ED1\u6811</p><h2 id="\u7785\u7785\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u7785\u7785\u4EE3\u7801" aria-hidden="true">#</a> \u7785\u7785\u4EE3\u7801</h2><h3 id="_1-hash-\u6270\u52A8" tabindex="-1"><a class="header-anchor" href="#_1-hash-\u6270\u52A8" aria-hidden="true">#</a> 1. hash \u6270\u52A8</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5355\u770B\u6765\uFF0C\u5F53 key \u4E3A\u7A7A\u65F6\u8FD4\u56DE 0\uFF0C\u5426\u5219\u8FD4\u56DE\u4E00\u4E2A key \u7684 hash \u503C\u5F02\u6216 key \u7684 hash \u503C\u65E0\u7B26\u53F7\u53F3\u79FB\uFF08\u4E0B\u9762\u7B80\u79F0 \u201C\u53F3\u79FB\u201D\uFF09 16 \u4F4D\u7684\u4E00\u4E2A\u6574\u5F62\u6570\uFF1B\u90A3\u4E48\u4E3A\u4EC0\u4E48\u8BA1\u7B97\u51FA\u4E86 hash \u8FD8\u8981\u8BA9 hash ^ \u81EA\u5DF1\u53F3\u79FB 16 \u4F4D\u6765\u53BB\u6700\u7EC8\u503C\u5462\uFF1F\u8FD9\u91CC\u53EF\u80FD\u6709\u7684\u670B\u53CB\u5C31\u4F1A\u8BF4\uFF0C\u554A\uFF01\u8FD9\u9898\u6211\u4F1A\uFF01\u6211\u5148\u6765\uFF1A\u201C\u56E0\u4E3A\u8FD9\u6837\u53EF\u4EE5\u66F4\u6709\u6548\u7684\u51CF\u5C11 hash \u78B0\u649E\uFF0C\u8BA9\u5143\u7D20\u518D\u6876\u4E2D\u5206\u5E03\u7684\u66F4\u5747\u5300\u201D\u3002\u867D\u7136\u4F46\u662F\uFF0C\u8FD9\u4F4D\u4E0D\u77E5\u540D\u7684\u670B\u53CB\u8BF4\u7684\u6CA1\u9519\uFF0C\u7684\u786E\u662F\u8FD9\u6837\u7684\uFF0C\u90A3\u4E48\u8BF7\u95EE\u54EA\u91CC\u53EF\u4EE5\u4E70\u7684\u5230\u5462\uFF1F\u2026\u2026\u5478\uFF0C\u90A3\u4E48\u4E3A\u4EC0\u4E48\u8FD9\u6837\u505A\u5C31\u80FD\u6709\u6548\u7684\u51CF\u5C11 hash \u78B0\u649E\u5462\uFF1F\u989D\uFF0C\u8981\u5F00\u59CB\u8F6C\u676F\u4E86\uFF0C\u9996\u5148\u6211\u4EEC\u6765\u5047\u8BBE\u4E00\u4E0B\u67D0\u4E2A\u6570\u5F02\u6216\u81EA\u8EAB\u53F3\u79FB 16 \u4F4D\u7684\u573A\u666F:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">0101</span> <span class="token number">1010</span> <span class="token number">1000</span> <span class="token number">1000</span> <span class="token number">1010</span> <span class="token number">0011</span> <span class="token number">0111</span> <span class="token number">0100</span>		<span class="token comment">// \u6570 A</span>
<span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0101</span> <span class="token number">1010</span> <span class="token number">1000</span> <span class="token number">1000</span>		<span class="token comment">// \u53F3\u79FB 16 \u4F4D\u4E4B\u540E\u7684 A\uFF0C\u6211\u4EEC\u8BB0\u4F5C A16</span>
                                       <span class="token operator">^</span>  <span class="token comment">// \u5F02\u6216</span>
\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
<span class="token number">0101</span> <span class="token number">1010</span> <span class="token number">1000</span> <span class="token number">1000</span> <span class="token number">1111</span> <span class="token number">1001</span> <span class="token number">1111</span> <span class="token number">1100</span>		<span class="token comment">// \u7ED3\u679C hash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u5F02\u6216\u8FD0\u7B97\u6211\u4EEC\u80FD\u53D1\u73B0 <code>A ^ A16</code> \u7684\u7ED3\u679C\u7684\u9AD8 16 \u4F4D\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u56E0\u4E3A\u53F3\u79FB 16 \u4E4B\u540E\u9AD8\u4F4D\u90FD\u8865\u4E86\u96F6\uFF0C\u5F02\u6216\u65F6\uFF1A <code>1 ^ 0 = 1</code>\uFF0C<code>0 ^ 0 = 0</code>\uFF0C\u81F3\u6B64\u597D\u50CF\u5E76\u6CA1\u6709\u770B\u51FA\u6765\u505A\u8FD9\u4E2A\u5F02\u6216\u64CD\u4F5C\u7684\u5FC5\u8981\u6027\u548C\u5B83\u5E26\u6765\u7684\u663E\u8457\u7684\u6210\u679C\u3002\u8FD9\u4E2A\u65F6\u5019\u4E0D\u59A8\u518D\u6765\u770B\u770B HashMap \u662F\u600E\u4E48\u6765\u8BA1\u7B97\u5143\u7D20\u5728\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span> <span class="token comment">// put() \u6E90\u7801\u4E2D\u622A\u53D6\u7684</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>n \u8868\u793A\u6570\u7EC4\u7684\u957F\u5EA6\uFF0C\u6211\u4EEC\u53D6 HashMap \u7684\u9ED8\u8BA4\u957F\u5EA6 16 \u6765\u505A\u4E2A\u5047\u8BBE\uFF0C\u90A3\u4E48 i = ( 16 - 1 ) &amp; hash -&gt; 15 &amp; hash\uFF08\u8FD9\u91CC\u5047\u8BBE\u662F\u4E00\u4E2A\u6570\u76F4\u63A5\u8C03\u7528 hashCode() \u751F\u6210\u7684\uFF0C\u5E76\u6CA1\u6709\u5F02\u6216\u81EA\u5DF1\u53F3\u79FB 16 \u4F4D\u7684 hash \u7801\uFF09\uFF0C\u8BA1\u7B97\u4E00\u4E0B\u5B50\u770B\u770B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">1101</span> <span class="token number">1011</span> <span class="token number">1010</span> <span class="token number">1100</span> <span class="token number">1111</span> <span class="token number">1001</span> <span class="token number">1111</span> <span class="token number">1100</span>		<span class="token comment">// hash</span>
<span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">1111</span>		<span class="token comment">// 15</span>
                                        <span class="token operator">&amp;</span> <span class="token comment">// \u4E0E</span>
\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014
<span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">0000</span> <span class="token number">1100</span>		<span class="token comment">// \u7ED3\u679C\uFF08\u4E0B\u6807\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u65F6\u5019\u6211\u4EEC\u4E0D\u96BE\u53D1\u73B0\uFF0Chash \u539F\u672C\u7684\u9AD8 16 \u4F4D\u4FE1\u606F\u5F88\u53EF\u80FD\u4F1A\u88AB\u6570\u7EC4\u69FD\u4F4D\u7684\u4E8C\u8FDB\u5236\u7801\u7ED9\u5C4F\u853D\u6389\uFF0C\u8BF4\u4EBA\u8BDD\u5C31\u662F\uFF1A\u56E0\u4E3A15 \u7684\u9AD8 16 \u4F4D\u5168\u90E8\u4E3A 0\uFF0C\u6240\u4EE5 hash \u539F\u672C\u7684\u9AD8 16 \u4F4D\u7684\u4FE1\u606F\u5728\u7ECF\u8FC7\u4E0A\u9762\u7684 &amp; \u8FD0\u7B97\u4E4B\u540E\uFF0C\u5168\u90E8\u4E22\u5931\u4E86\u3002\u8FD9\u65F6\u5019\u6709\u7684\u670B\u53CB\u53EF\u80FD\u4F1A\u8BF4\uFF0C\u5373\u4FBF\u662F\u4E22\u5931\u4E86\u9AD8\u4F4D\u7684\u7279\u5F81\u4FE1\u606F\uFF0C\u4E0D\u540C\u7684 hashcode \u8FD8\u662F\u53EF\u4EE5\u8BA1\u7B97\u51FA\u4E0D\u540C\u7684\u69FD\u4F4D\u6765\uFF0C\u4F46\u662F\u5047\u8BBE\u6709\u4E24\u4E2A\u54C8\u5E0C\u503C\u7684\u4F4E\u4F4D\u5341\u5206\u63A5\u8FD1\u800C\u9AD8\u4F4D\u5DEE\u5F02\u5F88\u5927\uFF0C\u90A3\u4E48\u8FD9\u4E24\u4E2A\u54C8\u5E0C\u503C\u8BA1\u7B97\u51FA\u5F97\u51FA\u7684\u6876\u4E0B\u6807\u5C31\u4F1A\u5F88\u63A5\u8FD1\uFF0C\u5728\u63D2\u5165 HashMap \u4E2D\u65F6\u5C31\u4F1A\u5728\u76F8\u90BB\u5F97\u4F4D\u7F6E\uFF0C\u8FD9\u4E2A\u6837\u7684\u8BDD\u54C8\u5E0C\u78B0\u649E\u7684\u673A\u7387\u5C31\u4F1A\u53D8\u5927\uFF0C\u4ECE\u800C\u5F71\u54CD\u54C8\u5E0C\u6563\u5217\u7684\u6548\u679C\u3002</p><blockquote><p>\u63D2\u64AD\u4E00\u6761\u4E00\u4F4D\u4E0D\u613F\u900F\u9732\u59D3\u540D\u7684\u5F20\u4E00\u5468\u5148\u751F\u7684\u5C0F tips\uFF1A</p><p>\u54C8\u5E0C\u6270\u52A8\u7B97\u6CD5\u4E2D\u4F7F\u7528\u5F02\u6216\uFF0C\u662F\u56E0\u4E3A <code>^</code> \u80FD\u66F4\u597D\u7684\u4FDD\u7559\u5927\u90E8\u5206\u7684\u201C\u7279\u5F81\u201D\uFF0C\u56E0\u4E3A\uFF0C\u5982\u679C\u4F7F\u7528 <code>&amp;</code> \uFF08\u4E0E\uFF09\u8FD0\u7B97\uFF0C\u8FD0\u7B97\u7684\u7ED3\u679C\u4F1A\u5411 0 \u9760\u62E2\uFF1B<code>|</code>\uFF08\u6216\uFF09\u8FD0\u7B97\u7684\u7ED3\u679C\u4F1A\u5411 1 \u9760\u62E2\u3002</p></blockquote><h3 id="_2-\u521D\u59CB\u5BB9\u91CF" tabindex="-1"><a class="header-anchor" href="#_2-\u521D\u59CB\u5BB9\u91CF" aria-hidden="true">#</a> 2. \u521D\u59CB\u5BB9\u91CF</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The default initial capacity - MUST be a power of two.
 * \u9ED8\u8BA4\u521D\u59CB\u5BB9\u91CF - \u5FC5\u987B\u662F 2 \u7684\u5E42
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// aka 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4EC0\u4E48 HashMap \u7684\u957F\u5EA6\u8981\u662F 2 \u7684\u6574\u6570\u6B21\u5E42\u5462\uFF1F\uFF08\u7ED3\u8BBA\uFF1A\u52A0\u5FEB\u8FD0\u7B97\uFF0C\u51CF\u5C11 hash \u78B0\u649E</p><h4 id="\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u52A0\u5FEB\u8BA1\u7B97" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u52A0\u5FEB\u8BA1\u7B97" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u53EF\u4EE5\u52A0\u5FEB\u8BA1\u7B97</h4><p>\u6211\u4EEC\u90FD\u77E5\u9053\u4E3A\u4E86\u627E\u5230 key \u7684\u4F4D\u7F6E\u5728\u54C8\u5E0C\u8868\u7684\u54EA\u4E2A\u69FD\u91CC\u9762\uFF0C\u9700\u8981\u8BA1\u7B97 <strong><code>hash(key) % \u6570\u7EC4\u957F\u5EA6</code></strong>\uFF0C<strong>\u4F46\u662F\uFF01<code>%</code> \u8BA1\u7B97\u6BD4 <code>&amp;</code> \u6162\u5F88\u591A</strong>\uFF0C\u6240\u4EE5\u7528 <code>&amp;</code> \u4EE3\u66FF <code>%</code>\uFF0C\u53C8\u4E3A\u4E86\u4FDD\u8BC1 <code>&amp;</code> \u7684\u8BA1\u7B97\u7ED3\u679C\u7B49\u4E8E <code>%</code> \u7684\u7ED3\u679C\u9700\u8981\u628A length \u51CF 1\uFF0C\u4E5F\u5C31\u662F <strong><code>hash(key) &amp; (length - 1)</code></strong></p><h5 id="\u5C0F\u5B9E\u9A8C\u9A8C\u8BC1\u4E00\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u5B9E\u9A8C\u9A8C\u8BC1\u4E00\u4E0B" aria-hidden="true">#</a> \u5C0F\u5B9E\u9A8C\u9A8C\u8BC1\u4E00\u4E0B\uFF1A</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;XJ!&quot;</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 86895 -&gt; 0001 0101 0011 0110 1111</span>
    
    <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">65536</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> hashCode <span class="token operator">%</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 21359</span>
    
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> hashCode <span class="token operator">&amp;</span> <span class="token punctuation">(</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 21359</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u51CF\u5C11-hash-\u78B0\u649E" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u51CF\u5C11-hash-\u78B0\u649E" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u53EF\u4EE5\u51CF\u5C11 hash \u78B0\u649E</h4><p>\u65E2\u7136\u6211\u4EEC\u5DF2\u7ECF\u77E5\u9053\u8BA1\u7B97\u69FD\u4F4D\u7684\u516C\u5F0F\uFF0C\u90A3\u6211\u4EEC\u5C31\u6765\u4E2A\u5C0F\u5C0F\u7684\u5B9E\u9A8C\u3002\u5047\u8BBE\u6211\u4EEC\u73B0\u5728\u6570\u7EC4\u7684\u957F\u5EA6 length \u53EF\u80FD\u4E3A\u5947\u6570\u6216\u8005\u5076\u6570</p><p><strong>length \u4E3A\u5076\u6570\u65F6</strong>\uFF0Clength-1 \u4E3A\u5947\u6570\uFF0C\u5947\u6570\u7684\u4E8C\u8FDB\u5236\u6700\u540E\u4E00\u4F4D\u662F 1\uFF0C\u8FD9\u6837\u4FBF\u4FDD\u8BC1\u4E86 hash &amp;(length-1) \u7684\u6700\u540E\u4E00\u4F4D\u53EF\u80FD\u4E3A 0\uFF0C\u4E5F\u53EF\u80FD\u4E3A 1\uFF08\u8FD9\u53D6\u51B3\u4E8E hash \u7684\u503C\uFF09\uFF0C\u5373 &amp; \u8FD0\u7B97\u540E\u7684\u7ED3\u679C\u53EF\u80FD\u4E3A\u5076\u6570\uFF0C\u4E5F\u53EF\u80FD\u4E3A\u5947\u6570\uFF0C<strong>\u8FD9\u6837\u4FBF\u53EF\u4EE5\u4FDD\u8BC1\u6563\u5217\u7684\u5747\u5300\u6027</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F8B\u5982\uFF1A</span>
length <span class="token operator">=</span> <span class="token number">6</span>\uFF0Clength <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">5</span>\uFF0C<span class="token number">5</span> \u7684\u4E8C\u8FDB\u5236\u4E3A <span class="token number">101</span>

hash <span class="token operator">=</span> <span class="token number">2</span>\uFF0Chash \u7684\u4E8C\u8FDB\u5236\u4E3A <span class="token number">010</span>

\u5373 <span class="token number">010</span> <span class="token operator">&amp;</span> <span class="token number">101</span> <span class="token operator">=</span> <span class="token number">000</span>\uFF08\u5076\u6570\u4F4D\u7F6E\uFF09

hash <span class="token operator">=</span> <span class="token number">3</span>\uFF0Chash \u7684\u4E8C\u8FDB\u5236\u4E3A <span class="token number">011</span>

\u5373 <span class="token number">011</span> <span class="token operator">&amp;</span> <span class="token number">101</span> <span class="token operator">=</span> <span class="token number">001</span> \uFF08\u5947\u6570\u4F4D\u7F6E\uFF09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u5982\u679C <strong>length \u4E3A\u5947\u6570</strong>\u7684\u8BDD\uFF0C\u5F88\u660E\u663E length-1 \u4E3A\u5076\u6570\uFF0C\u5B83\u7684\u6700\u540E\u4E00\u4F4D\u662F 0\uFF0C\u8FD9\u6837 hash &amp; (length-1) \u7684\u6700\u540E\u4E00\u4F4D\u80AF\u5B9A\u4E3A 0\uFF0C\u5373\u53EA\u80FD\u4E3A\u5076\u6570\uFF0C\u8FD9\u6837\u4EFB\u4F55 hash \u503C\u90FD<strong>\u53EA\u4F1A\u88AB</strong>\u6563\u5217\u5230\u6570\u7EC4\u7684<strong>\u5076\u6570\u4E0B\u6807\u4F4D\u7F6E</strong>\u4E0A\uFF0C\u8FD9\u4FBF<strong>\u6D6A\u8D39\u4E86\u8FD1\u4E00\u534A\u7684\u7A7A\u95F4</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u4F8B\u5982\uFF1A</span>
length <span class="token operator">=</span> <span class="token number">3</span>\uFF0Clength <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">2</span>\uFF0C<span class="token number">2</span> \u7684\u4E8C\u8FDB\u5236\u662F <span class="token number">10</span>

<span class="token number">10</span> \u65E0\u8BBA\u4E0E\u4EC0\u4E48\u6570\u8FDB\u884C <span class="token operator">&amp;</span> \u8FD0\u7B97\uFF0C\u7ED3\u679C\u90FD\u662F\u5076\u6570
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\uFF0Clength \u53D6 2 \u7684\u6574\u6570\u6B21\u5E42\uFF0C\u662F\u4E3A\u4E86\u4F7F\u4E0D\u540C hash \u503C\u53D1\u751F\u78B0\u649E\u7684\u6982\u7387\u8F83\u5C0F\uFF0C\u8FD9\u6837\u5C31\u80FD\u4F7F\u5143\u7D20\u5728\u54C8\u5E0C\u8868\u4E2D<strong>\u5747\u5300\u5730\u6563\u5217</strong>\u3002</p><h4 id="\u521D\u59CB\u5316-hashmap-\u65F6\u5BF9\u4E8E\u4F60\u8F93\u5165\u975E2\u7684\u6B21\u65B9\u7684\u5BB9\u91CF\u6570-\u4F1A\u600E\u4E48\u6837" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316-hashmap-\u65F6\u5BF9\u4E8E\u4F60\u8F93\u5165\u975E2\u7684\u6B21\u65B9\u7684\u5BB9\u91CF\u6570-\u4F1A\u600E\u4E48\u6837" aria-hidden="true">#</a> \u521D\u59CB\u5316 HashMap \u65F6\u5BF9\u4E8E\u4F60\u8F93\u5165\u975E2\u7684\u6B21\u65B9\u7684\u5BB9\u91CF\u6570\uFF0C\u4F1A\u600E\u4E48\u6837\uFF1F</h4><p>\u5C0F\u806A\u660E\u662F\u5427\uFF0C\u8FD9\u597D\u5417\uFF1F\u8FD9\u4E0D\u597D\u3002HashMap \u4E0D\u4F1A\u8BA9\u4F60\u4EEC\u8FD9\u4E48\u505A\u7684\uFF0C\u5B9E\u9645\u4E0A\u4F60\u7ED9\u5B9A\u7684\u521D\u59CB\u5BB9\u91CF\uFF0CHashMap \u8FD8\u4F1A\u5224\u65AD\u662F\u4E0D\u662F2\u7684\u6B21\u5E42\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u5219\u7ED9\u51FA\u4E00\u4E2A\u5927\u4E8E\u7ED9\u5B9A\u5BB9\u91CF\u7684\u6700\u5C0F 2 \u7684\u6B21\u5E42\u7684\u503C\u4F5C\u4E3A\u65B0\u7684\u5BB9\u91CF\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * Returns a power of two size for the given target capacity.
 */</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> cap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> cap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">:</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E5F\u9A8C\u8BC1\u4E86\u4E00\u4E2A\u91CD\u8981\u7684\u7F16\u7A0B\u601D\u60F3\uFF1A\u6C38\u8FDC\u8981\u628A\u5BA2\u6237\u5F53\u6210\u50BB\u5B50\u3002\uFF08\u5657\u55E4\uFF0C\u8017\u5B50\u5C3E\u6C41~</p><h3 id="_3-\u52A0\u8F7D\u56E0\u5B50" tabindex="-1"><a class="header-anchor" href="#_3-\u52A0\u8F7D\u56E0\u5B50" aria-hidden="true">#</a> 3. \u52A0\u8F7D\u56E0\u5B50</h3><p>\u8D1F\u8F7D\u56E0\u5B50\u662F\u6269\u5145 table \u7684\u6307\u6807\u91CF\uFF0C\u9ED8\u8BA4 0.75\uFF0C\u5F53 Map \u4E2D <code>entry\uFF08\u952E\u503C\u5BF9\uFF09\u6570\u91CF / bins \u603B\u91CF\uFF08\u6570\u7EC4\u957F\u5EA6\uFF09 &gt; loadFactor</code> \u65F6\uFF0C\u6269\u5BB9 table \u5230\u539F\u6765\u5BB9\u91CF\u7684\u4E24\u500D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
* The load factor used when none specified in constructor.
* \u5F53\u6784\u9020\u51FD\u6570\u4E2D\u6CA1\u6709\u6307\u5B9A\u65F6\u52A0\u8F7D\u7684\u52A0\u8F7D\u56E0\u5B50
*/</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> <span class="token constant">DEFAULT_LOAD_FACTOR</span> <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>emmmm... \u597D\u50CF\u5927\u5BB6\u90FD\u559C\u6B22\u95EE\u8FD9\u4E2A\u52A0\u8F7D\u56E0\u5B50\u4E3A\u4EC0\u4E48\u8981\u9009\u62E9 0.75 \u4E3A\u4EC0\u4E48\u4E0D\u662F\u5176\u4ED6\u7684\u6570\u503C\uFF0C(\u2299\uFE4F\u2299) \u554A\u8FD9... \u6211\u53EA\u80FD\u642C\u51FA\u6E90\u7801\u4E2D\u4F5C\u8005\u7684\u6CE8\u91CA\uFF08\u82F1\u6587\uFF0C\u6709\u70B9\u96BE\u9876...</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
 * Ideally, under random hashCodes, the frequency of
 * nodes in bins follows a Poisson distribution
 * (http://en.wikipedia.org/wiki/Poisson_distribution) with a
 * parameter of about 0.5 on average for the default resizing
 * threshold of 0.75, although with a large variance because of
 * resizing granularity. Ignoring variance, the expected
 * occurrences of list size k are (exp(-0.5) * pow(0.5, k) /
 * factorial(k)). The first values are:
 *
 * 0:    0.60653066		// \u52A0\u8F7D\u56E0\u5B50 = 0.75\u65F6\uFF0Cbin \u4E2D\u94FE\u8868\u957F\u5EA6 = 0\uFF0C\u968F\u673A\u8282\u70B9\u843D\u5165 bin \u4E2D\u7684\u6982\u7387
 * 1:    0.30326533		// \u52A0\u8F7D\u56E0\u5B50 = 0.75\u65F6\uFF0Cbin \u4E2D\u94FE\u8868\u957F\u5EA6 = 1\uFF0C\u968F\u673A\u8282\u70B9\u843D\u5165 bin \u4E2D\u7684\u6982\u7387
 * 2:    0.07581633		// ...
 * 3:    0.01263606
 * 4:    0.00157952
 * 5:    0.00015795
 * 6:    0.00001316
 * 7:    0.00000094
 * 8:    0.00000006		// \u52A0\u8F7D\u56E0\u5B50 = 0.75\u65F6\uFF0Cbin \u4E2D\u94FE\u8868\u957F\u5EA6 = 8\uFF0C\u968F\u673A\u8282\u70B9\u843D\u5165 bin \u4E2D\u7684\u6982\u7387
 * more: less than 1 in ten million
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),r={href:"http://en.wikipedia.org/wiki/Poisson_distribution",target:"_blank",rel:"noopener noreferrer"},d=a(`<h4 id="\u52A0\u8F7D\u56E0\u5B50\u80FD\u4E0D\u80FD\u6539\u4E00\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u52A0\u8F7D\u56E0\u5B50\u80FD\u4E0D\u80FD\u6539\u4E00\u4E0B" aria-hidden="true">#</a> \u52A0\u8F7D\u56E0\u5B50\u80FD\u4E0D\u80FD\u6539\u4E00\u4E0B</h4><p>\u6539\u6210 0.5 \u6216\u8005 1\uFF0C\u4F1A\u600E\u4E48\u6837\uFF1F\u80FD\u5927\u4E8E1\u5417\uFF1F\u6211\u4EEC\u53EF\u4EE5\u601D\u8003\u4E00\u4E0B\uFF1A</p><ul><li>\u8D1F\u8F7D\u56E0\u5B50\u8D8A\u5C0F\uFF0C\u6570\u7EC4\u6269\u5BB9\u7684\u9891\u7387\u5C31\u4F1A\u53D8\u9AD8\uFF0Ctable\uFF08\u6570\u7EC4\uFF09\u589E\u957F\u7684\u901F\u5EA6\u4E5F\u5C31\u8D8A\u5FEB\uFF0C\u76F8\u5E94\u51FA\u73B0 hash \u78B0\u649E\u7684\u6982\u7387\u5C31\u8D8A\u5C0F\uFF0Cbin \u4E2D\u94FE\u8868\u7684\u957F\u5EA6\u8D8A\u77ED\uFF0C\u540C\u65F6\u7A7A\u95F4\u5229\u7528\u7387\u4F4E\uFF0Ctable \u770B\u4E0A\u53BB\u4F1A\u975E\u5E38\u7A00\u758F\u3002</li><li>\u8D1F\u8F7D\u56E0\u5B50\u8D8A\u5927\uFF0C\u6570\u7EC4\u6269\u5BB9\u7684\u9891\u7387\u5C31\u4F1A\u53D8\u4F4E\uFF0Ctable\uFF08\u6570\u7EC4\uFF09\u589E\u957F\u7684\u901F\u5EA6\u4E5F\u5C31\u8D8A\u6162\uFF0C\u76F8\u5E94\u51FA\u73B0 hash \u78B0\u649E\u7684\u6982\u7387\u5C31\u8D8A\u5927\uFF0Cbin \u4E2D\u94FE\u8868\u7684\u957F\u5EA6\u8D8A\u957F\uFF0C\u540C\u65F6\u7A7A\u95F4\u5229\u7528\u7387\u9AD8\uFF0Ctable \u770B\u4E0A\u53BB\u4F1A\u975E\u5E38\u7A20\u5BC6\u3002</li></ul><p>\u770B\u56FE\u4ECE\u76F4\u89C2\u4E0A\u611F\u89C9 table \u7684\u7A00\u758F\u7A0B\u5EA6:</p><p><img src="https://cdn.jsdelivr.net/gh/WalterXiong/typora-img/img/202209191405699.png" alt="image-20220919140517784" loading="lazy"></p><p>\u4F8B\u5982\uFF1A</p><ul><li><p>\u573A\u666F\u4E00\uFF1Atable \u957F\u5EA6 = 10, \u8D1F\u8F7D\u56E0\u5B50 = 0.1, \u6BCF\u52A0\u5165\u4E00\u4E2A\u5143\u7D20\u5C31\u4F1A\u6269\u5BB9\uFF0C\u6D6A\u8D39\u4E86\u7A7A\u95F4\uFF0C\u4F46\u4E00\u5B9A\u4E0D\u4F1A\u51FA\u73B0\u78B0\u649E\uFF1B</p></li><li><p>\u573A\u666F\u4E8C\uFF1A\u5982\u679C\u5C06\u573A\u666F\u4E00\u4E2D\u7684\u8D1F\u8F7D\u56E0\u5B50\u4FEE\u6539\u4E3A 1, \u5219\u52A0\u5165 10 \u4E2A\u5143\u7D20\u540E\u624D\u4F1A\u89E6\u53D1\u6269\u5BB9\uFF0C\u53EF\u60F3\u800C\u77E5\u56E0\u4E3A\u8FD9 10 \u4E2A\u5143\u7D20\u662F\u901A\u8FC7 hash % size \u843D\u5165 table \u4E2D\u7684\uFF0C\u6700\u7406\u60F3\u7684\u72B6\u6001\u662F\u6BCF\u4E2A bulk \u4E2D\u843D\u5165\u4E00\u4E2A\u5143\u7D20\uFF0C\u4F46\u51E0\u4E4E\u53EF\u4EE5\u80AF\u5B9A\u7684\u662F\uFF0C\u6709\u7684 bulk \u4E2D\u843D\u5165\u4E86\u4E24\u4E2A\u6216\u66F4\u591A\u5143\u7D20 (\u5F62\u6210\u94FE\u8868)\uFF0C\u5373\u51FA\u73B0\u4E86 hash \u78B0\u649E\uFF1B</p></li><li><p>\u7EFC\u4E0A\u53EF\u4EE5\u5927\u4E8E 1 \u4F46\u662F\u4E0D\u63A8\u8350\u5927\u4E8E 1\u3002</p></li></ul><h3 id="_4-put-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_4-put-\u5206\u6790" aria-hidden="true">#</a> 4. put \u5206\u6790</h3><p>put() \u548C get() \u65B9\u6CD5\u662F\u5927\u5BB6\u4F7F\u7528 map \u65F6\u6700\u4E3A\u719F\u6089\u7684\u65B9\u6CD5\uFF0C\u5148\u770B\u770B put \u56E0\u4E3A get \u76F8\u5BF9\u6765\u8BF4\u4F1A\u7B80\u5355\u5F88\u591A\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Implements Map.put and related methods.
 *
 * <span class="token keyword">@param</span> <span class="token parameter">hash</span> 			key \u7684 hash \u503C
 * <span class="token keyword">@param</span> <span class="token parameter">key</span>  			\u8981\u5B58\u5165 map \u7684 key
 * <span class="token keyword">@param</span> <span class="token parameter">value</span> 		\u8981\u5B58\u5165 map \u7684 value
 * <span class="token keyword">@param</span> <span class="token parameter">onlyIfAbsent</span> 	\u5982\u679C\u662F true\uFF0C\u90A3\u4E48\u53EA\u6709\u5728\u4E0D\u5B58\u5728\u8BE5 key \u65F6\u624D\u4F1A\u8FDB\u884C put \u64CD\u4F5C
 * <span class="token keyword">@param</span> <span class="token parameter">evict</span> 		\u5982\u679C\u4E3A false\uFF0C\u5219\u8868\u5904\u4E8E\u521B\u5EFA\u6A21\u5F0F\uFF08\u4E0D\u5173\u5FC3\uFF09
 * <span class="token keyword">@return</span> 				\u524D\u4E00\u4E2A\u503C\uFF0C\u5982\u679C\u6CA1\u6709\u7684\u8BDD\u5C31\u8FD4\u56DE\u7A7A
 */</span>
<span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span> <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	
	<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> 
	
	<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> 
	
	<span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
	
    <span class="token comment">// \u7B2C\u4E00\u6B21 put \u503C\u7684\u65F6\u5019\uFF0C\u4F1A\u89E6\u53D1\u4E0B\u9762\u7684 resize() \u91CC\u7684\u521D\u59CB\u5316\u6570\u7EC4\uFF0C\u4ECE\u800C\u83B7\u53D6\u6570\u7EC4\u7684\u957F\u5EA6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    <span class="token comment">// \u627E\u5F53\u524D entry \u5728\u6570\u7EC4\u4E2D\u8BA1\u7B97\u51FA\u7684\u7684\u4E0B\u6807\u7684\u4F4D\u7F6E</span>
    <span class="token comment">// \u5982\u679C\u6B64\u4F4D\u7F6E\u6CA1\u6709\u503C\uFF0C\u90A3\u4E48\u76F4\u63A5\u521D\u59CB\u5316\u4E00\u4E0B Node \u5E76\u653E\u7F6E\u5728\u8FD9\u4E2A\u4F4D\u7F6E\u5C31\u53EF\u4EE5\u4E86</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 
    <span class="token comment">// \u6570\u7EC4\u8BE5\u4F4D\u7F6E\u6709\u6570\u636E\uFF0C\u8868\u793A\u5B58\u5728\u51B2\u7A81</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span> 
		<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> 
        
		<span class="token class-name">K</span> k<span class="token punctuation">;</span> <span class="token comment">// \u627E\u5230\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u5143\u7D20\u503C</span>
		
        <span class="token comment">// \u9996\u5148\u6BD4\u8F83\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u7B2C\u4E00\u4E2A\u6570\u636E\u548C\u6211\u4EEC\u5C06\u8981\u63D2\u5165\u7684\u6570\u636E\u7684 key \u662F\u5426\u201C\u76F8\u7B49\u201D</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			
			e <span class="token operator">=</span> p<span class="token punctuation">;</span>
            
		<span class="token punctuation">}</span>
        <span class="token comment">// \u4E0D\u7136\u7684\u8BDD\u770B\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u7B2C\u4E00\u4E2A\u6570\u636E\u662F\u4E0D\u662F\u7EA2\u9ED1\u6811\u7684\u8282\u70B9\uFF0C\u5982\u679C\u662F\uFF0C\u90A3\u4E48\u8C03\u7528\u7EA2\u9ED1\u6811\u7684\u63D2\u5165\u65B9\u6CD5\u8FDB\u884C\u63D2\u5165\u503C</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> 
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5230\u8FD9\u4EE5\u4E0A\u60C5\u51B5\u90FD\u4E0D\u6EE1\u8DB3\uFF0C\u8BF4\u660E\u8BE5\u4F4D\u7F6E\u8981\u6309\u7167\u94FE\u8868\u6765\u8FDB\u884C\u5904\u7406</span>
            <span class="token comment">// \u904D\u5386\u8FD9\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u94FE\u8868\u8282\u70B9</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u6CA1\u6709\u4E0B\u4E00\u4E2A\u94FE\u8868\u8282\u70B9\uFF0C\u5C31\u65B0\u5EFA\u4E00\u4E2A\u8282\u70B9\u5C06\u8FD9\u4E2A entry \u653E\u8FDB\u53BB\uFF0C\u5C3E\u63D2\u5230\u94FE\u8868\u4E0A</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">// \u5982\u679C\u94FE\u8868\u7684\u957F\u5EA6 &gt;= 8\u4E2A\u5143\u7D20\u65F6\uFF0C\u90A3\u4E48\u5C06\u94FE\u8868\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811\uFF08\u6811\u5316\uFF09</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> <span class="token constant">TREEIFY_THRESHOLD</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// -1 for 1st</span>
						<span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token comment">// \u6328\u4E2A\u5224\u65AD\u5F53\u524D\u8981\u63D2\u5165\u7684\u5143\u7D20 \u548C \u94FE\u8868\u4E0A\u7684\u6BCF\u4E2A\u5143\u7D20\u7684 key \u662F\u5426 \u201C\u76F8\u7B49\u201D</span>
                <span class="token comment">// \u5982\u679C key \u76F8\u7B49\u90A3\u4E48\u8868\u793A\u5728 map \u4E2D\u5B58\u5728 key \u76F8\u7528\u7684\u5143\u7D20\uFF0C\u8DF3\u51FA\u904D\u5386</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> 
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				
				p <span class="token operator">=</span> e<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
        
        <span class="token comment">// e!=null \u8BF4\u660E\u5B58\u5728\u65E7\u503C\u7684 key \u4E0E\u8981\u63D2\u5165\u7684key \u201C\u76F8\u7B49\u201D</span>
        <span class="token comment">// \u5BF9\u4E8E\u6211\u4EEC\u5206\u6790\u7684put\u64CD\u4F5C\uFF0C\u4E0B\u9762\u8FD9\u4E2A if \u5176\u5B9E\u5C31\u662F\u8FDB\u884C &quot;\u503C\u8986\u76D6&quot;\uFF0C\u7136\u540E\u8FD4\u56DE\u65E7\u503C</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
			<span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token operator">++</span>modCount<span class="token punctuation">;</span>
	<span class="token comment">// \u5982\u679C HashMap \u7531\u4E8E\u65B0\u63D2\u5165\u8FD9\u4E2A\u503C\u5BFC\u81F4 size \u5DF2\u7ECF\u8D85\u8FC7\u4E86\u9608\u503C\uFF0C\u9700\u8981\u8FDB\u884C\u6269\u5BB9</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-resize-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_5-resize-\u5206\u6790" aria-hidden="true">#</a> 5. resize \u5206\u6790</h3><p>resize() \u65B9\u6CD5\u7528\u4E8E\u6570\u7EC4\u7684<strong>\u521D\u59CB\u5316</strong>\u6216\u8005<strong>\u6269\u5BB9</strong>\uFF0C\u6BCF\u6B21\u6269\u5BB9\u5B8C\u90FD\u662F\u539F\u6765\u7684 2 \u500D\uFF0C\u5E76\u4E14\u8FDB\u884C\u6570\u636E\u8FC1\u79FB\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	
	<span class="token comment">// \u5C06\u5F53\u524D\u6570\u7EC4\u62FF\u51FA\u6765 \u8D4B\u503C \u7ED9 oldTab</span>
	<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTab <span class="token operator">=</span> table<span class="token punctuation">;</span>
	
	<span class="token comment">// \u5982\u679C oldTab \u662F\u7A7A\uFF0C\u8868\u793A\u662F\u7B2C\u4E00\u6B21\u63D2\u5165\u6570\u636E\u6570\u7EC4\u7684\u5BB9\u91CF\uFF08\u957F\u5EA6\uFF09\u4E3A 0</span>
	<span class="token keyword">int</span> oldCap <span class="token operator">=</span> <span class="token punctuation">(</span>oldTab <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> oldTab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	
	<span class="token comment">// \u6570\u7EC4\u6269\u5BB9\u7684\u4E34\u754C\u503C\uFF0C\u7B2C\u4E00\u6B21\u63D2\u5165\u65F6\u4E5F\u662F 0</span>
	<span class="token keyword">int</span> oldThr <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
	
	<span class="token comment">// \u65B0\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u65B0\u7684\u6269\u5BB9\u4E34\u754C\u503C</span>
	<span class="token keyword">int</span> newCap<span class="token punctuation">,</span> newThr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	
	<span class="token comment">// \u5224\u65AD\u5BB9\u91CF\u662F\u5426\u5927\u4E8E0\uFF0C\u5176\u5B9E\u5C31\u662F\u770B\u5F53\u524D\u6570\u7EC4\u662F\u4E0D\u662F\u7A7A\u7684</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		
		<span class="token keyword">if</span> <span class="token punctuation">(</span>oldCap <span class="token operator">&gt;=</span> <span class="token constant">MAXIMUM_CAPACITY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> oldTab<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>newCap <span class="token operator">=</span> oldCap <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span> 
                 oldCap <span class="token operator">&gt;=</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			newThr <span class="token operator">=</span> oldThr <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// double threshold</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span> 
	<span class="token comment">// \u521D\u59CB\u5316\u5BB9\u91CF\u4E3A 0\uFF0C\u4F46\u662F\u9608\u503C\u4E0D\u4E3A 0\uFF0C\u5BF9\u5E94\u4F7F\u7528 new HashMap(int initialCapacity) \u521D\u59CB\u5316\u540E\uFF0C\u7B2C\u4E00\u6B21 put \u7684\u65F6\u5019</span>
	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldThr <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		newCap <span class="token operator">=</span> oldThr<span class="token punctuation">;</span>
	<span class="token punctuation">}</span> 
	<span class="token comment">// \u521D\u59CB\u5316\u5BB9\u91CF\u4E3A 0\uFF0C\u4F46\u662F\u9608\u503C\u4E5F\u4E3A 0\uFF0C\u5BF9\u5E94\u4F7F\u7528 new HashMap() \u521D\u59CB\u5316\u540E\uFF0C\u7B2C\u4E00\u6B21 put \u7684\u65F6\u5019</span>
	<span class="token keyword">else</span> <span class="token punctuation">{</span>               
		<span class="token comment">// \u4F7F\u7528 \u9ED8\u8BA4\u7684\u521D\u59CB\u5316\u5BB9\u91CF 16</span>
		newCap <span class="token operator">=</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">;</span>
		<span class="token comment">// \u4F7F\u7528 \u9ED8\u8BA4\u7684\u5BB9\u91CF * \u9ED8\u8BA4\u7684\u8D1F\u8F7D\u56E0\u5B50\uFF080.75\uFF09 = \u65B0\u7684\u9608\u503C </span>
		newThr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token constant">DEFAULT_LOAD_FACTOR</span> <span class="token operator">*</span> <span class="token constant">DEFAULT_INITIAL_CAPACITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">if</span> <span class="token punctuation">(</span>newThr <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">float</span> ft <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>newCap <span class="token operator">*</span> loadFactor<span class="token punctuation">;</span>
		newThr <span class="token operator">=</span> <span class="token punctuation">(</span>newCap <span class="token operator">&lt;</span> <span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">&amp;&amp;</span> ft <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token constant">MAXIMUM_CAPACITY</span> <span class="token operator">?</span> 
                  <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>ft <span class="token operator">:</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	threshold <span class="token operator">=</span> newThr<span class="token punctuation">;</span>

	<span class="token comment">// \u7528\u4E0A\u9762\u65B0\u7684\u6570\u7EC4\u5927\u5C0F \u521D\u59CB\u5316\u4E00\u4E2A \u65B0\u7684\u6570\u7EC4</span>
	<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTab <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">[</span>newCap<span class="token punctuation">]</span><span class="token punctuation">;</span>
    
	<span class="token comment">// \u5982\u679C\u53EA\u662F\u521D\u59CB\u5316\u6570\u7EC4\u7684\u8BDD\uFF0C\u90A3\u4E48\u5230\u6B64\u7ED3\u675F\uFF0C\u76F4\u63A5\u8FD4\u56DE\u65B0\u7684\u6570\u7EC4\u3002</span>
	table <span class="token operator">=</span> newTab<span class="token punctuation">;</span> 
	
	<span class="token comment">/*
	 * \u4EE5\u4E0B\u4E3A\u6269\u5BB9 \u6570\u636E\u8FC1\u79FB\u7684\u903B\u8F91
	 */</span>
	<span class="token comment">//\u5982\u679C\u5F53\u524D\u64CD\u4F5C\u7684\u6570\u7EC4\u4E0D\u4E3A\u7A7A \u90A3\u4E48\u5C31\u5F00\u59CB \u6267\u884C\u6570\u636E\u8FC1\u79FB\u7684\u903B\u8F91</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>oldTab <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		
		<span class="token comment">// \u5F00\u59CB\u904D\u5386\u539F\u6570\u7EC4</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> oldCap<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
		
			<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token comment">// \u4E34\u65F6\u8282\u70B9</span>
			
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				
				oldTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
				
				<span class="token comment">// \u5982\u679C\u8BE5\u6570\u7EC4\u4F4D\u7F6E\u4E0A\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u5C31\u7B80\u5355\u4E86\uFF0C\u7B80\u5355\u8FC1\u79FB\u8FD9\u4E2A\u5143\u7D20\u5C31\u53EF\u4EE5\u4E86</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					newTab<span class="token punctuation">[</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> <span class="token punctuation">(</span>newCap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token comment">// \u5426\u5219\u770B\u8FD9\u4E2A\u8282\u70B9\u662F\u4E0D\u662F\u6811\u8282\u70B9\uFF0C\u5982\u679C\u662F\u7EA2\u9ED1\u6811\u7684\u6811\u8282\u70B9\uFF08\u7559\u4E2A\u5751 \u540E\u7EED\u63A2\u7A76</span>
				<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> newTab<span class="token punctuation">,</span> j<span class="token punctuation">,</span> oldCap<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token comment">// \u975E\u5355\u4E2A\u5143\u7D20\u4E5F\u4E0D\u662F\u6811\u8282\u70B9\uFF0C\u90A3\u53EA\u80FD\u662F\u94FE\u8868</span>
				<span class="token comment">// \u9700\u8981\u5C06\u8FD9\u6761\u94FE\u8868\u62C6\u6210\u4E24\u6761\u65B0\u7684\u94FE\u8868</span>
				<span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// preserve order</span>

					<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> loHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> loTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
					<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> hiHead <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> hiTail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
					<span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
					
					<span class="token keyword">do</span> <span class="token punctuation">{</span>
						next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
						
						<span class="token comment">// \u5224\u65AD\u8BE5\u5143\u7D20\u5728\u65E7\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\uFF08\u6570\u7EC4\u4E0B\u6807\uFF09\uFF0C\u662F\u5426\u4E0E\u5728\u65B0\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E\u76F8\u540C</span>
						<span class="token comment">// \u82E5\u4E0B\u6807\u4E0D\u53D8\uFF0C\u5219\u5C06\u8BE5\u5143\u7D20\u653E\u5165\u4E00\u6761\u4EE5 loHead \u4E3A\u5934\u8282\u70B9\u7684\u94FE\u8868\u4E2D</span>
						<span class="token comment">// \u53CD\u4E4B\u5C06\u8BE5\u5143\u7D20\u653E\u5165\u4E00\u6761\u4EE5 hiHead \u4E3A\u5934\u8282\u70B9\u7684\u94FE\u8868</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">&amp;</span> oldCap<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							
							<span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
								loHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
							<span class="token punctuation">}</span> 
							<span class="token keyword">else</span> <span class="token punctuation">{</span>
								loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
							loTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						<span class="token keyword">else</span> <span class="token punctuation">{</span>
							
							<span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
								hiHead <span class="token operator">=</span> e<span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
							<span class="token keyword">else</span> <span class="token punctuation">{</span>
								hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> e<span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
							hiTail <span class="token operator">=</span> e<span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						
					<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					
					<span class="token keyword">if</span> <span class="token punctuation">(</span>loTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						loTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
						<span class="token comment">// \u4E0B\u6807\u4F4D\u7F6E\u76F8\u540C\u7684\u5143\u7D20\u94FE\u8868</span>
						newTab<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> loHead<span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					
					<span class="token keyword">if</span> <span class="token punctuation">(</span>hiTail <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						hiTail<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
						<span class="token comment">// \u4E0B\u6807\u4F4D\u7F6E\u7B49\u4E8E\u5143\u7D20\u5728\u65E7\u6570\u7EC4\u4E2D\u7684\u4E0B\u6807\u52A0\u4E0A\u5C31\u6570\u7EC4\u7684\u957F\u5EA6\u7684\u94FE\u8868</span>
						newTab<span class="token punctuation">[</span>j <span class="token operator">+</span> oldCap<span class="token punctuation">]</span> <span class="token operator">=</span> hiHead<span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> newTab<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-get-\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_6-get-\u5206\u6790" aria-hidden="true">#</a> 6. get \u5206\u6790</h3><p>\u76F8\u5BF9\u4E8E put \u6765\u8BF4\uFF0Cget \u771F\u7684\u592A\u7B80\u5355\u4E86\u3002</p><ul><li>\u8BA1\u7B97 key \u7684 hash \u503C\uFF0C\u6839\u636E hash \u503C\u627E\u5230\u5BF9\u5E94\u6570\u7EC4\u4E0B\u6807\uFF1A<code>hash &amp; (length-1)</code></li><li>\u5224\u65AD\u6570\u7EC4\u8BE5\u4F4D\u7F6E\u5904\u7684\u5143\u7D20\u662F\u5426\u521A\u597D\u5C31\u662F\u6211\u4EEC\u8981\u627E\u7684\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u8D70\u7B2C\u4E09\u6B65</li><li>\u5224\u65AD\u8BE5\u5143\u7D20\u7C7B\u578B\u662F\u5426\u662F TreeNode\uFF0C\u5982\u679C\u662F\uFF0C\u7528\u7EA2\u9ED1\u6811\u7684\u65B9\u6CD5\u53D6\u6570\u636E\uFF0C\u5982\u679C\u4E0D\u662F\uFF0C\u8D70\u7B2C\u56DB\u6B65</li><li>\u904D\u5386\u94FE\u8868\uFF0C\u76F4\u5230\u627E\u5230\u76F8\u7B49\uFF08<code>==</code> \u6216 <code>equals</code>\uFF09\u7684 key</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token comment">// \u63A5\u6536\u5F53\u524D\u6570\u7EC4</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> 
    
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> 
    
    <span class="token comment">// \u63A5\u6536\u5F53\u524D\u6570\u7EC4\u957F\u5EA6</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span> 
    
    <span class="token comment">// \u63A5\u6536 entry \u7684 key \u503C</span>
    <span class="token class-name">K</span> k<span class="token punctuation">;</span>
    
    <span class="token comment">// 1\uFE0F\u20E3 \u5982\u679C\u5F53\u524D\u6570\u7EC4\u4E0D\u4E3A\u7A7A  \u5E76\u4E14 \u6570\u7EC4\u4E2D\u5B58\u6709\u5143\u7D20 \u5E76\u4E14 \u8981\u53D6\u5F97\u5143\u7D20\u5F97 hash \u8BA1\u7B97\u51FA\u5F97\u6570\u7EC4\u4E0B\u6807\u5F97\u4F4D\u7F6E\u6709\u503C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
        <span class="token comment">// 2\uFE0F\u20E3 \u5224\u65AD\u7B2C\u4E00\u4E2A\u8282\u70B9\u662F\u4E0D\u662F\u5C31\u662F\u9700\u8981\u7684</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> first<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 3\uFE0F\u20E3 \u5224\u65AD\u7B2C\u4E00\u4E2A\u8282\u70B9\u662F\u4E0D\u662F\u7EA2\u9ED1\u6811\u8282\u70B9</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 4\uFE0F\u20E3 \u904D\u5386\u94FE\u8868\uFF0C\u76F4\u5230\u627E\u5230\u94FE\u5C3E\u90E8\uFF0C\u627E\u5230\u5C31\u8FD4\u56DE \u8282\u70B9\uFF0C\u5426\u5219\u8FD4\u56DE \u7A7A</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ciao~ \u0E5B\u0E01(\uFF70\u0300\u03C9\uFF70\u0301\u0E01)</p>`,18);function m(v,b){const t=i("ExternalLinkIcon");return e(),o(l,null,[k,s("p",null,[n("\u7528\u6211 82 \u5E74\u7684\u5851\u6599\u82F1\u8BED\u5927\u6982\u770B\u4E86\u4E00\u4E0B\uFF0C\u54B3\u54B3\u54B3\uFF0C\u5927\u81F4\u662F\u8BF4\uFF1A\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C hashcode \u968F\u673A \uFF0C\u52A0\u8F7D\u56E0\u5B50\u4E3A 0.75 \u7684\u60C5\u51B5\u4E0B\uFF0C\u5C3D\u7BA1\u7531\u4E8E\u7C92\u5EA6\u8C03\u6574\u4F1A\u4EA7\u751F\u8F83\u5927\u7684\u65B9\u5DEE\uFF0C\u8282\u70B9\u7684\u5206\u5E03\u9891\u7387\u4ECD\u7136\u4F1A\u670D\u4ECE\u53C2\u6570\u4E3A 0.5 \u7684"),s("a",r,[n("\u6CCA\u677E\u5206\u5E03 ( Poisson distribution )"),c(t)]),n("\u3002\u540C\u65F6\u7ED9\u51FA\u4E86\u6876\u4E2D\u5143\u7D20\u4E2A\u6570\u548C\u6982\u7387\u7684\u5BF9\u7167\u8868\u3002\u4ECE\u4E0A\u9762\u7684\u8868\u4E2D\u53EF\u4EE5\u770B\u5230\u5F53\u6876\u4E2D\u5143\u7D20\u5230\u8FBE8\u4E2A\u7684\u65F6\u5019\uFF0C\u53D1\u751F\u7684\u6982\u7387\u4EC5\u6709 0.00000006\uFF0C\u6982\u7387\u5DF2\u7ECF\u53D8\u5F97\u975E\u5E38\u5C0F\u3002\u4E5F\u5C31\u662F\u8BF4\u7528 0.75 \u4F5C\u4E3A\u52A0\u8F7D\u56E0\u5B50\uFF0C\u6BCF\u4E2A\u78B0\u649E\u4F4D\u7F6E\u7684\u94FE\u8868\u957F\u5EA6\u8D85\u8FC7\uFF18\u4E2A\u6982\u7387\u66F4\u662F\u5C0F\u4E8E\u5343\u4E07\u5206\u4E4B\u4E00\uFF0C\u662F\u51E0\u4E4E\u4E0D\u53EF\u80FD\u7684\u3002")]),d],64)}var g=p(u,[["render",m],["__file","HashMap.html.vue"]]);export{g as default};
